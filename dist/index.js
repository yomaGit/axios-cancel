!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.axiosCancel=t():e.axiosCancel=t()}(this,function(){return function(e){function t(u){if(n[u])return n[u].exports;var s=n[u]={exports:{},id:u,loaded:!1};return e[u].call(s.exports,s,s.exports,t),s.loaded=!0,s.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t,n){"use strict";function u(e){return e&&e.__esModule?e:{default:e}}function s(e,t){var n={debug:!1};t&&Object.assign(n,t);var u=new r.default(n);if(!e)return void u.log("arguments axios error");var s=e.CancelToken;e.interceptors.request.use(function(e){var t=e.requestId;if(t){var n=s.source();e.cancelToken=n.token,u.addRequest(t,n.cancel)}return e}),e.interceptors.response.use(function(e){var t=e.config.requestId;return t&&u.removeRequest(t),e}),e.cancel=function(e,t){e&&u.cancelRequest(e,t)},e.cancelAll=function(e){u.cancelAllRequests(e)}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=s;var o=n(1),r=u(o)},function(e,t){"use strict";function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var u=function(){function e(e,t){for(var n=0;n<t.length;n++){var u=t[n];u.enumerable=u.enumerable||!1,u.configurable=!0,"value"in u&&(u.writable=!0),Object.defineProperty(e,u.key,u)}}return function(t,n,u){return n&&e(t.prototype,n),u&&e(t,u),t}}(),s=function(){function e(t){n(this,e),this.options=t||{},this.pendingRequests={}}return u(e,[{key:"addRequest",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"cancelRequest request from addRequest";this.log("addRequest: "+e),this.has(e)&&this.cancelRequest(e,n),this.pendingRequests[e]=t}},{key:"removeRequest",value:function(e){this.log("removeRequest: "+e),delete this.pendingRequests[e]}},{key:"cancelRequest",value:function(e,t){if(this.has(e)){if(this.log("cancelRequest: "+e),"function"!=typeof this.pendingRequests[e])return;this.pendingRequests[e](t+" `requestId: "+e+"`"),this.removeRequest(e)}}},{key:"cancelAllRequests",value:function(e){for(var t in this.pendingRequests)this.cancelRequest(t,e)}},{key:"has",value:function(e){return this.pendingRequests[e]}},{key:"log",value:function(e){this.options.debug&&console.log(e)}}]),e}();t.default=s}])});